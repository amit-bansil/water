/*
 * CREATED ON:    Apr 14, 2006 4:05:59 PM
 * CREATED BY:    Amit Bansil 
 */
package cps.water.moleculedisplay;

import cps.jarch.data.value.ROValue;
import cps.jarch.data.value.RWValue;
import cps.jarch.data.value.tools.BoundedValue;
import cps.jarch.data.value.tools.ROFlag;
import cps.jarch.data.value.tools.RWFlag;
import cps.jarch.data.value.tools.RWValueImp;
import cps.jarch.gui.util.ComponentProxy;
import cps.water.ControlFactory;
import cps.water.Model;
import cps.water.moleculedisplay.DisplayModel.ColorScheme;
import static cps.water.ControlFactory.*;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * <p>A {@link ComponentProxy} that edits a {@link DisplayModel}.
 * </p>
 * @version $Id$
 * @author Amit Bansil
 */
public final class DisplayControls implements ComponentProxy{
	private final JComponent panel;
	private final ROValue<Model> controlledModel;
	public final JComponent getComponent() {
		return panel;
	}
	public DisplayControls(ROValue<Model> controlledModel) {
		// components

		// layout
		panel = new JPanel(new BorderLayout(0, 0));
		Box left = Box.createHorizontalBox();
		Box right = Box.createHorizontalBox();

		left.add(ControlFactory
			.stickTogether(
				createToggleButton(shrinkAtoms, "Shrink Atoms"),
				createToggleButton(spinDisplay, "Spin Display"));
		left.add(hSpace(MED_SPACE));
		
		left.add(new JLabel("Zoom"));
		left.add(hSpace(SMALL_SPACE));
		left.add(createFloatSpinner(5f, zoom));
		left.add(hSpace(MED_SPACE));
		
		left.add(new JLabel("Color Scheme"));
		left.add(hSpace(SMALL_SPACE));
		left.add(createEnumCombo(colorScheme,DisplayModel.ColorScheme.values()));
		left.add(hSpace(MED_SPACE));
		
		right.add(createToolbarButton("Recenter", new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				recenter();
			}		
		}));
		
		panel.add(left,BorderLayout.WEST);
		panel.add(right,BorderLayout.EAST);
		bindPanelEnabled(ROFlag.notNull(controlledModel),panel);
		
		this.controlledModel = controlledModel;
		
	}
	// ------------------------------------------------------------------------

	private final RWFlag shrinkAtoms=new RWFlag(true),
		spinDisplay=new RWFlag(true);
	private final BoundedValue<Float> zoom=new BoundedValue<Float>(50f,0f,100f);
	private final RWValue<DisplayModel.ColorScheme> colorScheme=new RWValueImp<DisplayModel.ColorScheme>(
			ColorScheme.Type,false);
	private final void recenter() {
		
	}
}
