/*
 * CREATED ON:    Apr 21, 2006 4:52:09 PM
 * CREATED BY:    Amit Bansil 
 */
package cps.water.util;

import javax.swing.SwingUtilities;

import cps.jarch.data.value.tools.RWFlag;

import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;

/**
 * <p>TODO document MouseToggleHandler
 * </p>
 * @version $Id$
 * @author Amit Bansil
 */
public abstract class MouseToggleHandler implements MouseListener,MouseMotionListener{
	public MouseToggleHandler() {
		
	}
	public void mouseClicked(MouseEvent e) {
		active.set(true);
		update(e);
	}
	public void mouseEntered(MouseEvent e) {
		in=true;
		update(e);
	}
	public void mouseExited(MouseEvent e) {
		in=false;
		update(e);
	}
	public void mousePressed(MouseEvent e) {
		if(SwingUtilities.isLeftMouseButton(e))
			down=pressed=true;
		update(e);
	}
	public void mouseReleased(MouseEvent e) {
		if(SwingUtilities.isLeftMouseButton(e))
			pressed=false;
		update(e);
	}
	public void mouseDragged(MouseEvent e) {
		if(SwingUtilities.isLeftMouseButton(e))
			down=true;
		in=true;
		update();
	}
	public void mouseMoved(MouseEvent e) {
		down=pressed=false;
		in=true;
		update(e);
	}
	private final RWFlag active=new RWFlag(false);
	public final RWFlag active() {
		return active;
	}
	private boolean in;//mouse is inside component
	private boolean pressed;//left mouse is pressed & was pressed in component
	private boolean down;//mouse is down
	
	private final void update(MouseEvent e) {
		if(active.get())doSetState(State.ACTIVE);
		else if(in&&pressed) {
			assert down;
			doSetState(State.PRESSED);
		}else if(in&&!down) {
			doSetState(State.ROLLOVER);
		}else {
			doSetState(State.NORMAL);
		}
	}
	public static enum State{
		ACTIVE,NORMAL,ROLLOVER,PRESSED
	};
	private State oldState=null;
	private final void doSetState(State s) {
		if(oldState!=s);
		setState(s);
		oldState=s;
	}
	protected abstract void setState(State s);
}
