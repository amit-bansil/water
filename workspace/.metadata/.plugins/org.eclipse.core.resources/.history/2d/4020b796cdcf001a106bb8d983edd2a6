/*
 * CREATED ON:    Apr 16, 2006 3:46:34 PM
 * CREATED BY:    Amit Bansil 
 */
package cps.water.moleculedisplay;

import cps.jarch.util.notes.Constant;
import cps.jarch.util.notes.Immutable;

import java.awt.Color;
import java.util.concurrent.locks.ReadWriteLock;

/**
 * <p>Draws a Scenegraph.
 * </p>
 * @version $Id$
 * @author Amit Bansil
 */
public abstract class Renderer {

	private final ReadWriteLock lock;
	public final @Constant ReadWriteLock getLock() {
		return lock;
	}
	// ------------------------------------------------------------------------
	//data
	public static @Immutable class DataType{
		private final float radius;
		public @Constant final float getRadius() {
			return radius;
		}
		private final int faces;
		public @Constant final int getFaces() {
			return faces;
		}
		private final float r,g,b;
		public @Constant Color getColor() {
			
		}
		private final boolean useTypeColor;
		public final boolean useTypeColor() {
			return useTypeColor;
		}
	}
	
	public static final class Data<Type extends DataType>{
		private int count;
		public int getCount() {
			return count;
		}
		private int[] typeIndexes;
		public int getTypeIndex(int index) {
			
		}
		public void getTypeIndexes(int startIndex,int count,int dstStartIndex,int[] target) {
			
		}
		private float[] colors;
		public void getColors(int startIndex,int count,int srcStartIndex,float[] target) {
			
		}
		public void getColor(int index,float[] target) {
			
		}
		public void setColors(int startIndex,int count,int srcStartIndex,float[] src) {
			
		}
		private ArrayFinal<Type> types;
		public void setTypes(ArrayFinal<Type> types) {
			
		}
		public ArrayFinal<Type> getTypes(){
			return types;
		}

	}
}
