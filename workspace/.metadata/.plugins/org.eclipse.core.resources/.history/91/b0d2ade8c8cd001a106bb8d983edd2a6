/*
 * DefaultBoundPropertyRW.java CREATED: Aug 9, 2003 12:49:06 PM AUTHOR: Amit
 * Bansil PROJECT: vmdl2 Copyright 2003 The Center for Polymer Studies, Boston
 * University, all rights reserved.
 */
package cps.jarch.data.value.tools;

import java.util.concurrent.locks.ReadWriteLock;

import cps.jarch.data.io.SaveableDataProxy;
import cps.jarch.data.value.RWValue;
import cps.jarch.data.value.RejectedValueException;
import cps.jarch.util.notes.Nullable;


/**
 * Basic <code>RWValue</code> implementation.
 * 
 * @version $Id$
 * @author Amit Bansil
 */
public class RWValueImp<T> extends CheckedValueImp<T>
		implements RWValue<T>,SaveableDataProxy {
	/**
	 * creates not null RWValueImp.defaultValue must not be null.
	 */
	public RWValueImp(T defaultValue) {
		this(defaultValue,false);
	}
	/**
	 * creates RWValueImp set to initial value <code>defaultValue</code>.
	 * @throws Error if set does not accept defaultValue
	 */
	public RWValueImp(T defaultValue, boolean allowsNull) {
		this(defaultValue,allowsNull,null);
	}
	/**
	 * creates nullable RWValueImp that is initially <code>null</code>.
	 */
	public RWValueImp() {
		this(null,true,null);
	}
	public RWValueImp(T defaultValue,boolean allowsNull,@Nullable ReadWriteLock lock) {
		super(defaultValue,allowsNull,lock);
	}
	
	public final void set(T newValue) {
		try {
			checkedSet(newValue);
		} catch (RejectedValueException e) {
			//should not happen since check is empty
			throw new Error(e);
		}
	}
	
	@Override protected final void check(T newValue) throws RejectedValueException {
		//do nothing
	}

}